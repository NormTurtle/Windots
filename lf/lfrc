# default is cmd too Bruh
#set shellopts 
# set shell cmd
# map | shell
# set shellflags '/c'
set mouse on
# appearance
set icons on
set drawbox on
set preview on

# set previewer bat
set dircounts on 
set dirpreviews on
set dirfirst off
set relativenumber on
set scrolloff 0 # ain't wrokg?
set wrapscan on
set wrapscroll on
# search
set ignorecase on
set ignoredia on
set incsearch on
set smartcase on 
set smartdia on

# Movement
map <esc> quit
map gd cd ~/Documents
map gD cd ~/Downloads
map gp cd ~/Pictures
map gc cd ~/.config
map gm cd ~/Music
map gv cd ~/videos


# execute current file (must be executable)
map x $$f
map X !$f
# editors
map e $nvim %f%
map i $bat %f%



# fit based upon content size to ratio
${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $w -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}


# make sure trash folder exists
 %mkdir -p ~/.cache/.trash
 

# Delte THINGS

# define a custom 'delete' command
  cmd delete ${{
      set -f
      printf "$fx\n"
      printf "delete?[y/n]"
      read ans
      [ "$ans" = "y" ] && rm -rf $fx
  }}

# use '<delete>' key for either 'trash' or 'delete' command
 map DD delete
# map <delete> delete

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
